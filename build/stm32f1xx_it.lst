ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB68:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f1xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f1xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f1xx_it.c **** 
  28:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f1xx_it.c **** 
  31:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f1xx_it.c **** 
  36:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f1xx_it.c **** 
  38:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f1xx_it.c **** 
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f1xx_it.c **** 
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f1xx_it.c **** 
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  60:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  61:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  62:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart2;
  64:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart3;
  65:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim8;
  66:Core/Src/stm32f1xx_it.c **** 
  67:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  68:Core/Src/stm32f1xx_it.c **** 
  69:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  70:Core/Src/stm32f1xx_it.c **** 
  71:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  73:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f1xx_it.c **** /**
  75:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  76:Core/Src/stm32f1xx_it.c ****   */
  77:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  78:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 78 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  79:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f1xx_it.c **** 
  81:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f1xx_it.c **** 
  84:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 3


  85:Core/Src/stm32f1xx_it.c **** }
  32              		.loc 1 85 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE68:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB69:
  86:Core/Src/stm32f1xx_it.c **** 
  87:Core/Src/stm32f1xx_it.c **** /**
  88:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Core/Src/stm32f1xx_it.c ****   */
  90:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  91:Core/Src/stm32f1xx_it.c **** {
  47              		.loc 1 91 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  92:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Core/Src/stm32f1xx_it.c **** 
  94:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Core/Src/stm32f1xx_it.c ****   while (1)
  54              		.loc 1 95 3 discriminator 1 view .LVU3
  96:Core/Src/stm32f1xx_it.c ****   {
  97:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Core/Src/stm32f1xx_it.c ****   }
  55              		.loc 1 99 3 discriminator 1 view .LVU4
  95:Core/Src/stm32f1xx_it.c ****   {
  56              		.loc 1 95 9 discriminator 1 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE69:
  61              		.section	.text.MemManage_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	MemManage_Handler
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	MemManage_Handler:
  70              	.LFB70:
 100:Core/Src/stm32f1xx_it.c **** }
 101:Core/Src/stm32f1xx_it.c **** 
 102:Core/Src/stm32f1xx_it.c **** /**
 103:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 104:Core/Src/stm32f1xx_it.c ****   */
 105:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 4


 106:Core/Src/stm32f1xx_it.c **** {
  71              		.loc 1 106 1 view -0
  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L5:
 107:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f1xx_it.c **** 
 109:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f1xx_it.c ****   while (1)
  78              		.loc 1 110 3 discriminator 1 view .LVU7
 111:Core/Src/stm32f1xx_it.c ****   {
 112:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f1xx_it.c ****   }
  79              		.loc 1 114 3 discriminator 1 view .LVU8
 110:Core/Src/stm32f1xx_it.c ****   {
  80              		.loc 1 110 9 discriminator 1 view .LVU9
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE70:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	BusFault_Handler:
  94              	.LFB71:
 115:Core/Src/stm32f1xx_it.c **** }
 116:Core/Src/stm32f1xx_it.c **** 
 117:Core/Src/stm32f1xx_it.c **** /**
 118:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 119:Core/Src/stm32f1xx_it.c ****   */
 120:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 121:Core/Src/stm32f1xx_it.c **** {
  95              		.loc 1 121 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 122:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Core/Src/stm32f1xx_it.c **** 
 124:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Core/Src/stm32f1xx_it.c ****   while (1)
 102              		.loc 1 125 3 discriminator 1 view .LVU11
 126:Core/Src/stm32f1xx_it.c ****   {
 127:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 128:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Core/Src/stm32f1xx_it.c ****   }
 103              		.loc 1 129 3 discriminator 1 view .LVU12
 125:Core/Src/stm32f1xx_it.c ****   {
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 5


 104              		.loc 1 125 9 discriminator 1 view .LVU13
 105 0000 FEE7     		b	.L7
 106              		.cfi_endproc
 107              	.LFE71:
 109              		.section	.text.UsageFault_Handler,"ax",%progbits
 110              		.align	1
 111              		.global	UsageFault_Handler
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	UsageFault_Handler:
 118              	.LFB72:
 130:Core/Src/stm32f1xx_it.c **** }
 131:Core/Src/stm32f1xx_it.c **** 
 132:Core/Src/stm32f1xx_it.c **** /**
 133:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Core/Src/stm32f1xx_it.c ****   */
 135:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 136:Core/Src/stm32f1xx_it.c **** {
 119              		.loc 1 136 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L9:
 137:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Core/Src/stm32f1xx_it.c **** 
 139:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Core/Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 140 3 discriminator 1 view .LVU15
 141:Core/Src/stm32f1xx_it.c ****   {
 142:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32f1xx_it.c ****   }
 127              		.loc 1 144 3 discriminator 1 view .LVU16
 140:Core/Src/stm32f1xx_it.c ****   {
 128              		.loc 1 140 9 discriminator 1 view .LVU17
 129 0000 FEE7     		b	.L9
 130              		.cfi_endproc
 131              	.LFE72:
 133              		.section	.text.DebugMon_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	DebugMon_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu softvfp
 141              	DebugMon_Handler:
 142              	.LFB73:
 145:Core/Src/stm32f1xx_it.c **** }
 146:Core/Src/stm32f1xx_it.c **** 
 147:Core/Src/stm32f1xx_it.c **** /**
 148:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 149:Core/Src/stm32f1xx_it.c ****   */
 150:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 6


 151:Core/Src/stm32f1xx_it.c **** {
 143              		.loc 1 151 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 152:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f1xx_it.c **** 
 154:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 155:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f1xx_it.c **** 
 157:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 158:Core/Src/stm32f1xx_it.c **** }
 148              		.loc 1 158 1 view .LVU19
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE73:
 153              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 154              		.align	1
 155              		.global	DMA1_Channel3_IRQHandler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	DMA1_Channel3_IRQHandler:
 162              	.LFB74:
 159:Core/Src/stm32f1xx_it.c **** 
 160:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 161:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 162:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 163:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 164:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 165:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 166:Core/Src/stm32f1xx_it.c **** 
 167:Core/Src/stm32f1xx_it.c **** /**
 168:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 169:Core/Src/stm32f1xx_it.c ****   */
 170:Core/Src/stm32f1xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 171:Core/Src/stm32f1xx_it.c **** {
 163              		.loc 1 171 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 172:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 173:Core/Src/stm32f1xx_it.c **** 
 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 175:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_rx);
 172              		.loc 1 175 3 view .LVU21
 173 0002 0248     		ldr	r0, .L13
 174 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 175              	.LVL0:
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 7


 177:Core/Src/stm32f1xx_it.c **** 
 178:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 179:Core/Src/stm32f1xx_it.c **** }
 176              		.loc 1 179 1 is_stmt 0 view .LVU22
 177 0008 08BD     		pop	{r3, pc}
 178              	.L14:
 179 000a 00BF     		.align	2
 180              	.L13:
 181 000c 00000000 		.word	hdma_usart3_rx
 182              		.cfi_endproc
 183              	.LFE74:
 185              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 186              		.align	1
 187              		.global	DMA1_Channel5_IRQHandler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu softvfp
 193              	DMA1_Channel5_IRQHandler:
 194              	.LFB75:
 180:Core/Src/stm32f1xx_it.c **** 
 181:Core/Src/stm32f1xx_it.c **** /**
 182:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 183:Core/Src/stm32f1xx_it.c ****   */
 184:Core/Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 185:Core/Src/stm32f1xx_it.c **** {
 195              		.loc 1 185 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 08B5     		push	{r3, lr}
 200              	.LCFI1:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 187:Core/Src/stm32f1xx_it.c **** 
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 189:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 204              		.loc 1 189 3 view .LVU24
 205 0002 0248     		ldr	r0, .L17
 206 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 207              	.LVL1:
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 191:Core/Src/stm32f1xx_it.c **** 
 192:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 193:Core/Src/stm32f1xx_it.c **** }
 208              		.loc 1 193 1 is_stmt 0 view .LVU25
 209 0008 08BD     		pop	{r3, pc}
 210              	.L18:
 211 000a 00BF     		.align	2
 212              	.L17:
 213 000c 00000000 		.word	hdma_usart1_rx
 214              		.cfi_endproc
 215              	.LFE75:
 217              		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 218              		.align	1
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 8


 219              		.global	DMA1_Channel6_IRQHandler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu softvfp
 225              	DMA1_Channel6_IRQHandler:
 226              	.LFB76:
 194:Core/Src/stm32f1xx_it.c **** 
 195:Core/Src/stm32f1xx_it.c **** /**
 196:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel6 global interrupt.
 197:Core/Src/stm32f1xx_it.c ****   */
 198:Core/Src/stm32f1xx_it.c **** void DMA1_Channel6_IRQHandler(void)
 199:Core/Src/stm32f1xx_it.c **** {
 227              		.loc 1 199 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI2:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 200:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 0 */
 201:Core/Src/stm32f1xx_it.c **** 
 202:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 0 */
 203:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 236              		.loc 1 203 3 view .LVU27
 237 0002 0248     		ldr	r0, .L21
 238 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 239              	.LVL2:
 204:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 1 */
 205:Core/Src/stm32f1xx_it.c **** 
 206:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 1 */
 207:Core/Src/stm32f1xx_it.c **** }
 240              		.loc 1 207 1 is_stmt 0 view .LVU28
 241 0008 08BD     		pop	{r3, pc}
 242              	.L22:
 243 000a 00BF     		.align	2
 244              	.L21:
 245 000c 00000000 		.word	hdma_usart2_rx
 246              		.cfi_endproc
 247              	.LFE76:
 249              		.section	.text.USART1_IRQHandler,"ax",%progbits
 250              		.align	1
 251              		.global	USART1_IRQHandler
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu softvfp
 257              	USART1_IRQHandler:
 258              	.LFB77:
 208:Core/Src/stm32f1xx_it.c **** 
 209:Core/Src/stm32f1xx_it.c **** /**
 210:Core/Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 211:Core/Src/stm32f1xx_it.c ****   */
 212:Core/Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 213:Core/Src/stm32f1xx_it.c **** {
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 9


 259              		.loc 1 213 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 08B5     		push	{r3, lr}
 264              	.LCFI3:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 3, -8
 267              		.cfi_offset 14, -4
 214:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 215:Core/Src/stm32f1xx_it.c **** 
 216:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 217:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 268              		.loc 1 217 3 view .LVU30
 269 0002 0248     		ldr	r0, .L25
 270 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 271              	.LVL3:
 218:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 219:Core/Src/stm32f1xx_it.c **** 
 220:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 221:Core/Src/stm32f1xx_it.c **** }
 272              		.loc 1 221 1 is_stmt 0 view .LVU31
 273 0008 08BD     		pop	{r3, pc}
 274              	.L26:
 275 000a 00BF     		.align	2
 276              	.L25:
 277 000c 00000000 		.word	huart1
 278              		.cfi_endproc
 279              	.LFE77:
 281              		.section	.text.USART2_IRQHandler,"ax",%progbits
 282              		.align	1
 283              		.global	USART2_IRQHandler
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu softvfp
 289              	USART2_IRQHandler:
 290              	.LFB78:
 222:Core/Src/stm32f1xx_it.c **** 
 223:Core/Src/stm32f1xx_it.c **** /**
 224:Core/Src/stm32f1xx_it.c ****   * @brief This function handles USART2 global interrupt.
 225:Core/Src/stm32f1xx_it.c ****   */
 226:Core/Src/stm32f1xx_it.c **** void USART2_IRQHandler(void)
 227:Core/Src/stm32f1xx_it.c **** {
 291              		.loc 1 227 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 08B5     		push	{r3, lr}
 296              	.LCFI4:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 3, -8
 299              		.cfi_offset 14, -4
 228:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 229:Core/Src/stm32f1xx_it.c **** 
 230:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 231:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart2);
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 10


 300              		.loc 1 231 3 view .LVU33
 301 0002 0248     		ldr	r0, .L29
 302 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 303              	.LVL4:
 232:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 233:Core/Src/stm32f1xx_it.c **** 
 234:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 235:Core/Src/stm32f1xx_it.c **** }
 304              		.loc 1 235 1 is_stmt 0 view .LVU34
 305 0008 08BD     		pop	{r3, pc}
 306              	.L30:
 307 000a 00BF     		.align	2
 308              	.L29:
 309 000c 00000000 		.word	huart2
 310              		.cfi_endproc
 311              	.LFE78:
 313              		.section	.text.USART3_IRQHandler,"ax",%progbits
 314              		.align	1
 315              		.global	USART3_IRQHandler
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu softvfp
 321              	USART3_IRQHandler:
 322              	.LFB79:
 236:Core/Src/stm32f1xx_it.c **** 
 237:Core/Src/stm32f1xx_it.c **** /**
 238:Core/Src/stm32f1xx_it.c ****   * @brief This function handles USART3 global interrupt.
 239:Core/Src/stm32f1xx_it.c ****   */
 240:Core/Src/stm32f1xx_it.c **** void USART3_IRQHandler(void)
 241:Core/Src/stm32f1xx_it.c **** {
 323              		.loc 1 241 1 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 08B5     		push	{r3, lr}
 328              	.LCFI5:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
 242:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 243:Core/Src/stm32f1xx_it.c **** 
 244:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 245:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 332              		.loc 1 245 3 view .LVU36
 333 0002 0248     		ldr	r0, .L33
 334 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 335              	.LVL5:
 246:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 247:Core/Src/stm32f1xx_it.c **** 
 248:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 249:Core/Src/stm32f1xx_it.c **** }
 336              		.loc 1 249 1 is_stmt 0 view .LVU37
 337 0008 08BD     		pop	{r3, pc}
 338              	.L34:
 339 000a 00BF     		.align	2
 340              	.L33:
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 11


 341 000c 00000000 		.word	huart3
 342              		.cfi_endproc
 343              	.LFE79:
 345              		.section	.text.TIM8_UP_IRQHandler,"ax",%progbits
 346              		.align	1
 347              		.global	TIM8_UP_IRQHandler
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 353              	TIM8_UP_IRQHandler:
 354              	.LFB80:
 250:Core/Src/stm32f1xx_it.c **** 
 251:Core/Src/stm32f1xx_it.c **** /**
 252:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM8 update interrupt.
 253:Core/Src/stm32f1xx_it.c ****   */
 254:Core/Src/stm32f1xx_it.c **** void TIM8_UP_IRQHandler(void)
 255:Core/Src/stm32f1xx_it.c **** {
 355              		.loc 1 255 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 08B5     		push	{r3, lr}
 360              	.LCFI6:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 256:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_UP_IRQn 0 */
 257:Core/Src/stm32f1xx_it.c **** 
 258:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_UP_IRQn 0 */
 259:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 364              		.loc 1 259 3 view .LVU39
 365 0002 0248     		ldr	r0, .L37
 366 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 367              	.LVL6:
 260:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_UP_IRQn 1 */
 261:Core/Src/stm32f1xx_it.c **** 
 262:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_UP_IRQn 1 */
 263:Core/Src/stm32f1xx_it.c **** }
 368              		.loc 1 263 1 is_stmt 0 view .LVU40
 369 0008 08BD     		pop	{r3, pc}
 370              	.L38:
 371 000a 00BF     		.align	2
 372              	.L37:
 373 000c 00000000 		.word	htim8
 374              		.cfi_endproc
 375              	.LFE80:
 377              		.text
 378              	.Letext0:
 379              		.file 2 "e:\\armchain\\10 2021.07\\arm-none-eabi\\include\\machine\\_default_types.h"
 380              		.file 3 "e:\\armchain\\10 2021.07\\arm-none-eabi\\include\\sys\\_stdint.h"
 381              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 382              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 383              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 384              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 385              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
ARM GAS  C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:16     .text.NMI_Handler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:38     .text.HardFault_Handler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:62     .text.MemManage_Handler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:69     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:86     .text.BusFault_Handler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:93     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:110    .text.UsageFault_Handler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:117    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:134    .text.DebugMon_Handler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:141    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:154    .text.DMA1_Channel3_IRQHandler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:161    .text.DMA1_Channel3_IRQHandler:00000000 DMA1_Channel3_IRQHandler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:181    .text.DMA1_Channel3_IRQHandler:0000000c $d
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:186    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:193    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:213    .text.DMA1_Channel5_IRQHandler:0000000c $d
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:218    .text.DMA1_Channel6_IRQHandler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:225    .text.DMA1_Channel6_IRQHandler:00000000 DMA1_Channel6_IRQHandler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:245    .text.DMA1_Channel6_IRQHandler:0000000c $d
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:250    .text.USART1_IRQHandler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:257    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:277    .text.USART1_IRQHandler:0000000c $d
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:282    .text.USART2_IRQHandler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:289    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:309    .text.USART2_IRQHandler:0000000c $d
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:314    .text.USART3_IRQHandler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:321    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:341    .text.USART3_IRQHandler:0000000c $d
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:346    .text.TIM8_UP_IRQHandler:00000000 $t
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:353    .text.TIM8_UP_IRQHandler:00000000 TIM8_UP_IRQHandler
C:\Users\randommm\AppData\Local\Temp\ccPXXq7h.s:373    .text.TIM8_UP_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_usart3_rx
hdma_usart1_rx
hdma_usart2_rx
HAL_UART_IRQHandler
huart1
huart2
huart3
HAL_TIM_IRQHandler
htim8
